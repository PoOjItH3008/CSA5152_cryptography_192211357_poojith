def to_uppercase(text):
   
    return text.upper()

def vigenere_encrypt(plaintext, keyword):
    
    encrypted_text = []
    plaintext = to_uppercase(plaintext)
    keyword = to_uppercase(keyword)
    
    keyword_length = len(keyword)
    keyword_index = 0

    for char in plaintext:
        if char.isalpha():
            key_char = keyword[keyword_index % keyword_length]
            shift = ord(key_char) - ord('A')
            encrypted_char = chr((ord(char) - ord('A') + shift) % 26 + ord('A'))
            encrypted_text.append(encrypted_char)

            keyword_index += 1
        else:
            encrypted_text.append(char)  

    return ''.join(encrypted_text)

def vigenere_decrypt(ciphertext, keyword):
    
    decrypted_text = []
    ciphertext = to_uppercase(ciphertext)
    keyword = to_uppercase(keyword)
    
    keyword_length = len(keyword)
    keyword_index = 0

    for char in ciphertext:
        if char.isalpha():
            key_char = keyword[keyword_index % keyword_length]
            shift = ord(key_char) - ord('A')
            decrypted_char = chr((ord(char) - ord('A') - shift + 26) % 26 + ord('A'))
            decrypted_text.append(decrypted_char)

            keyword_index += 1
        else:
            decrypted_text.append(char)  

    return ''.join(decrypted_text)

def main():
    plaintext = input("Enter plaintext: ")
    keyword = input("Enter keyword: ")

    encrypted_text = vigenere_encrypt(plaintext, keyword)
    print(f"Encrypted text: {encrypted_text}")

    decrypted_text = vigenere_decrypt(encrypted_text, keyword)
    print(f"Decrypted text: {decrypted_text}")

if __name__ == "__main__":
    main()
